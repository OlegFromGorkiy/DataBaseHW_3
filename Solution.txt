    //Создайте таблицу city с колонками city_id и city_name.
CREATE TABLE city (
city_id BIGSERIAL NOT NULL PRIMARY KEY,
city_name VARCHAR(50) NOT NULL);
    //Добавьте в таблицу employee колонку city_id.
 ALTER TABLE emploee ADD COLUMN city_id INT;
    //Назначьте ее внешним ключом и свяжите с таблицей city.
ALTER TABLE emploee ADD FOREIGN KEY (city_id) REFERENCES city(city_id);
    //Заполните таблицу city и назначьте работникам соответствующие города.
INSERT INTO city (city_name)
VALUES ('St. Petersburg');
INSERT INTO city (city_name)
VALUES ('Moscow);
INSERT INTO city (city_name)
VALUES ('Nizny Novgorod');
UPDATE emploee SET city_id = 1 WHERE id = 1;
UPDATE emploee SET city_id = 2 WHERE id >1 AND id < 5;
UPDATE emploee SET city_id = 3 WHERE id > 4;
    //Получите имена и фамилии сотрудников, а также города,
    //в которых они проживают.
SELECT first_name, last_name, city_name
FROM emploee INNER JOIN city
ON emploee.city_id = city.city_id;
    //Получите города, а также имена и фамилии сотрудников,
    //которые в них проживают.
    //Если в городе никто из сотрудников не живет,
    //то вместо имени должен стоять null.
INSERT INTO city (city_name)
VALUES ('Kazan');
SELECT first_name, last_name, city_name
FROM emploee RIGHT JOIN city
ON emploee.city_id = city.city_id;
    //Получите имена всех сотрудников и названия всех городов.
    //если в городе не живет никто из сотрудников,
    //то вместо имени должен стоять null.
    //Аналогично, если города для какого-то из сотрудников нет в списке,
    //так же должен быть получен null.
SELECT first_name, last_name, city_name
FROM emploee FULL JOIN city
ON emploee.city_id = city.city_id;
    //Получите таблицу,
    //в которой каждому имени должен соответствовать каждый город.
SELECT first_name, last_name, city_name
FROM emploee CROSS JOIN city;